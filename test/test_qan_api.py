# coding: utf-8

"""
    QAN AutoApi

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from qan.api.qan_api import QANApi


class TestQANApi(unittest.TestCase):
    """QANApi unit test stubs"""

    def setUp(self) -> None:
        self.api = QANApi()

    def tearDown(self) -> None:
        pass

    def test_qan_block_number(self) -> None:
        """Test case for qan_block_number

        Returns the latest block number of the blockchain.
        """
        pass

    def test_qan_call(self) -> None:
        """Test case for qan_call

        Executes a new message call immediately without creating a transaction on the block chain.
        """
        pass

    def test_qan_chain_id(self) -> None:
        """Test case for qan_chain_id

        Returns the current network/chain ID, used to sign replay-protected transaction introduced in EIP-155.
        """
        pass

    def test_qan_estimate_gas(self) -> None:
        """Test case for qan_estimate_gas

        Returns an estimation of gas for a given transaction.
        """
        pass

    def test_qan_fee_history(self) -> None:
        """Test case for qan_fee_history

        Returns the collection of historical gas information.
        """
        pass

    def test_qan_gas_price(self) -> None:
        """Test case for qan_gas_price

        Returns the current gas price on the network in wei.
        """
        pass

    def test_qan_get_balance(self) -> None:
        """Test case for qan_get_balance

        Returns the balance of the account of given address.
        """
        pass

    def test_qan_get_block_by_hash(self) -> None:
        """Test case for qan_get_block_by_hash

        Returns information of the block matching the given block hash.
        """
        pass

    def test_qan_get_block_by_number(self) -> None:
        """Test case for qan_get_block_by_number

        Returns information of the block matching the given block number.
        """
        pass

    def test_qan_get_block_receipts(self) -> None:
        """Test case for qan_get_block_receipts

        Returns all transaction receipts for a given block.
        """
        pass

    def test_qan_get_block_transaction_count_by_hash(self) -> None:
        """Test case for qan_get_block_transaction_count_by_hash

        Returns the number of transactions for the block matching the given block hash.
        """
        pass

    def test_qan_get_block_transaction_count_by_number(self) -> None:
        """Test case for qan_get_block_transaction_count_by_number

        Returns the number of transactions for the block matching the given block number.
        """
        pass

    def test_qan_get_code(self) -> None:
        """Test case for qan_get_code

        Returns the compiled bytecode of a smart contract.
        """
        pass

    def test_qan_get_filter_changes(self) -> None:
        """Test case for qan_get_filter_changes

        Polling method for a filter, which returns an array of events that have occurred since the last poll.
        """
        pass

    def test_qan_get_filter_logs(self) -> None:
        """Test case for qan_get_filter_logs

        Returns an array of all logs matching filter with given id.
        """
        pass

    def test_qan_get_logs(self) -> None:
        """Test case for qan_get_logs

        Returns an array of all logs matching a given filter object.
        """
        pass

    def test_qan_get_proof(self) -> None:
        """Test case for qan_get_proof

        Returns the account and storage values of the specified account including the Merkle-proof.
        """
        pass

    def test_qan_get_storage_at(self) -> None:
        """Test case for qan_get_storage_at

        Returns the value from a storage position at a given address.
        """
        pass

    def test_qan_get_transaction_by_block_hash_and_index(self) -> None:
        """Test case for qan_get_transaction_by_block_hash_and_index

        Returns information about a transaction given a blockhash and transaction index position.
        """
        pass

    def test_qan_get_transaction_by_block_number_and_index(self) -> None:
        """Test case for qan_get_transaction_by_block_number_and_index

        Returns information about a transaction given a block number and transaction index position.
        """
        pass

    def test_qan_get_transaction_by_hash(self) -> None:
        """Test case for qan_get_transaction_by_hash

        Returns the information about a transaction from a transaction hash.
        """
        pass

    def test_qan_get_transaction_count(self) -> None:
        """Test case for qan_get_transaction_count

        Returns the number of transactions sent from an address.
        """
        pass

    def test_qan_get_transaction_receipt(self) -> None:
        """Test case for qan_get_transaction_receipt

        Returns the receipt of a transaction by transaction hash.
        """
        pass

    def test_qan_max_priority_fee_per_gas(self) -> None:
        """Test case for qan_max_priority_fee_per_gas

        Get the priority fee needed to be included in a block.
        """
        pass

    def test_qan_new_block_filter(self) -> None:
        """Test case for qan_new_block_filter

        Creates a filter in the node, to notify when a new block arrives.
        """
        pass

    def test_qan_new_filter(self) -> None:
        """Test case for qan_new_filter

        Creates a filter object, based on filter options, to notify when the state changes (logs).
        """
        pass

    def test_qan_new_pending_transaction_filter(self) -> None:
        """Test case for qan_new_pending_transaction_filter

        Creates a filter in the node to notify when new pending transactions arrive.
        """
        pass

    def test_qan_send_raw_transaction(self) -> None:
        """Test case for qan_send_raw_transaction

        Creates new message call transaction or a contract creation for signed transactions.
        """
        pass

    def test_qan_syncing(self) -> None:
        """Test case for qan_syncing

        Returns an object with the sync status of the node if the node is out-of-sync and is syncing. Returns null when the node is already in sync.
        """
        pass

    def test_qan_uninstall_filter(self) -> None:
        """Test case for qan_uninstall_filter

        Uninstalls a filter with the given filter id.
        """
        pass

    def test_qan_xlink_valid(self) -> None:
        """Test case for qan_xlink_valid

        Returns the xlink validity time of the account of given address.
        """
        pass


if __name__ == '__main__':
    unittest.main()
